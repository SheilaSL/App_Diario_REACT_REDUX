{"version":3,"sources":["hooks/useForm.js","types/types.js","firebase/firebase-config.js","actions/ui.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","routers/AppRouter.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["useForm","initialState","useState","values","setValues","handleInputChange","e","target","name","value","types","googleAuthProvider","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","GoogleAuthProvider","setError","err","type","payload","removeError","finishLoading","startLoginEmailPassword","email","password","dispatch","auth","getAuth","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","console","log","logout","LoginScreen","loading","useSelector","state","ui","useDispatch","formValues","handleValidation","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","UI","password2","isFormValid","trim","createUserWithEmailAndPassword","a","updateProfile","error","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","style","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","NotesAppBar","NoteScreen","JournalScreen","AppRouter","checking","setChecking","setIsLoggedIn","useEffect","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7705a215.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n    \r\n    const [values, setValues] = useState(initialState)\r\n\r\n    const handleInputChange=(e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange]\r\n}\r\n","export const types= {\r\n\r\n    //Login\r\n    login: '[auth] login',\r\n    logout: '[auth] logout',\r\n\r\n    //Errores formularios\r\n    uiSetError: '[ui] Set Error',\r\n    uiRemoveError: '[ui] Remove Error',\r\n\r\n    //Bloquear Boton Login\r\n    uiStartLoading: '[ui] Start loading',\r\n    uiFinishLoading: '[ui] Finish loading'\r\n}","import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n \r\n \r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyArbXR1lOr0bVfcrHpUiRSMyGVOkvCAlPs\",\r\n  authDomain: \"curso-redux-1.firebaseapp.com\",\r\n  projectId: \"curso-redux-1\",\r\n  storageBucket: \"curso-redux-1.appspot.com\",\r\n  messagingSenderId: \"1014322446964\",\r\n  appId: \"1:1014322446964:web:b626c7bf3cd0d5d2900721\"\r\n};\r\n \r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n \r\nconst db = getFirestore();\r\n \r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n \r\nexport{\r\n    db,\r\n    googleAuthProvider,\r\n    app\r\n}\r\n\r\n/*import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\n  // Import the functions you need from the SDKs you need\r\n // import { initializeApp } from \"https://www.gstatic.com/firebasejs/9.3.0/firebase-app.js\";\r\n  // TODO: Add SDKs for Firebase products that you want to use\r\n  // https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n  // Your web app's Firebase configuration\r\n  export const firebaseConfig = {\r\n    apiKey: \"AIzaSyArbXR1lOr0bVfcrHpUiRSMyGVOkvCAlPs\",\r\n    authDomain: \"curso-redux-1.firebaseapp.com\",\r\n    projectId: \"curso-redux-1\",\r\n    storageBucket: \"curso-redux-1.appspot.com\",\r\n    messagingSenderId: \"1014322446964\",\r\n    appId: \"1:1014322446964:web:b626c7bf3cd0d5d2900721\"\r\n  };\r\n\r\n  // Initialize Firebase\r\n  export const app = initializeApp(firebaseConfig);\r\n\r\n  //Esta es la bbdd\r\n  const db=firebase.firestore();\r\n\r\n  const googleAuthProvider=new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }*/\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const setError=(err)=>({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\nexport const removeError=()=>({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading=()=>({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading=()=>({\r\n    type: types.uiFinishLoading\r\n})","import { types } from \"../types/types\";\r\nimport {app, googleAuthProvider} from '../firebase/firebase-config'\r\nimport { getAuth, signOut, signInWithPopup, createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword} from 'firebase/auth';\r\nimport {startLoading, finishLoading} from '../actions/ui';\r\n\r\n\r\n\r\n\r\n//import {firebaseApp, googleAuthProvider} from '../firebase/firebase-config'\r\n\r\n\r\n\r\n//Funcion asincrona. Esta funcion regresa un callback\r\nexport const startLoginEmailPassword=(email, password)=>{\r\n    return(dispatch)=>{\r\n        dispatch(startLoading());\r\n\r\n        const auth=getAuth();\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then( ({user}) => {\r\n                dispatch(login(user.uid, user.displayName))\r\n                dispatch(finishLoading());\r\n            })\r\n            .catch(e => {\r\n                dispatch(finishLoading());\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName=(email, password, name)=>{\r\n    return ( dispatch ) => {\r\n        const auth=getAuth();\r\n        createUserWithEmailAndPassword(auth, email,password )\r\n            .then( async ({user}) => {\r\n                await updateProfile(user,{displayName:name})\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n                \r\n            })\r\n            .catch((err)=> console.error(err));\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch) =>{\r\n        const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider)\r\n            .then(({user}) =>{\r\n                dispatch(login(user.uid, user.displayName))\r\n            });\r\n    }\r\n}\r\n\r\nexport const login=(uid, displayName)=>{\r\n    return{\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startLogout=()=>{\r\n    return async(dispatch)=>{\r\n        const auth=getAuth();\r\n        await auth.signOut();\r\n           // .then( async ({user}) => {\r\n               // await updateProfile(user,{displayName:name})\r\n                dispatch(logout())\r\n                \r\n           // })\r\n          //  .catch((err)=> console.error(err));\r\n    }\r\n}\r\n\r\nexport const logout=()=>({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\nimport validator from 'validator';\nimport {setError, removeError} from '../../actions/ui';\n\nexport const LoginScreen = () => {\n\n    const state = useSelector(state => state.ui)\n    const {loading} = state;\n\n    const dispatch = useDispatch();\n\n    const [formValues, handleInputChange] = useForm({\n        email: 'sheila@gmail.com',\n        password:1234\n    })\n\n    const {email, password}=formValues;\n\n    const handleSubmit=(e)=>{\n        e.preventDefault(e);\n\n        if(handleValidation()){\n            //El dispatch recibe el uid y el nombre\n            dispatch(startLoginEmailPassword(email, password));\n        }\n    }\n\n    const handleValidation=()=>{\n        if(!validator.isEmail(email)){\n            dispatch(setError(\"Indique un email correcto\"));\n            return false;\n        }else if(password.length===0){\n            dispatch(setError(\"Indique una contraseña\"));\n            return false;\n        }\n        dispatch(removeError);\n        return true;\n    }\n\n    const handleGoogleLogin=()=>{\n        dispatch(startGoogleLogin());\n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form onSubmit={handleSubmit}>\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disabled= {loading}\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick={handleGoogleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport validator from 'validator';\nimport {setError, removeError} from '../../actions/ui';\nimport {useDispatch, useSelector} from 'react-redux';\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    //const state=useSelector(state=>state.UI);\n    //console.log(state);\n    const {msgError}=useSelector(state=>state.UI);\n    \n\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'Sheila',\n        email: 'sheila@gmail.com',\n        password: 111111,\n        password2: 111111\n    })\n    const {name, email, password, password2} = formValues;\n\n\n    const handleRegister=(e)=>{\n        e.preventDefault();\n\n        //Si isFormValid devuelve true\n        if(isFormValid()){\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\n        }\n\n        \n    }\n\n    const isFormValid=()=>{\n        if(name.trim().length===0){\n            console.log('Name is required');\n            dispatch(setError('Name is required'))\n            return false;\n        }else if(!validator.isEmail(email)){\n            console.log('Email is not valid');\n            dispatch(setError('Email is not valid'))\n            return false;\n        }else if(password!==password2 && password.length<5){\n            console.log('Password should be at least 6 characters and match')\n            dispatch(setError('Password should be at least 6 characters and match'))\n            return false;\n        }\n        \n        dispatch(removeError())\n        return true;\n        \n    }\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form onSubmit={handleRegister}>\n\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"name\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={name}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={handleInputChange}\n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const JournalEntry = () => {\n    return (\n        <div className=\"journal__entry pointer\">\n            \n            <div \n                className=\"journal__entry-picture\"\n                style={{\n                    backgroundSize: 'cover',\n                    backgroundImage: 'url(https://earthsky.org/upl/2018/12/comet-wirtanen-Jack-Fusco-dec-2018-Anza-Borrego-desert-CA-e1544613895713.jpg)'\n                }}\n            ></div>\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    Un nuevo día\n                </p>\n                <p className=\"journal__entry-content\">\n                    Reprehenderit id in duis consectetur deserunt veniam fugiat.\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>Monday</span>\n                <h4>28</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const entries = [1,2,3,4,5 ];\n\n\n    return (\n        <div className=\"journal__entries\">\n            \n            {\n                entries.map( value => (\n                    <JournalEntry key={ value } />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { JournalEntries } from './JournalEntries'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\n\nexport const Sidebar = () => {\n\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth)\n    console.log(name)\n    const handleLogout=()=>{\n        dispatch(startLogout());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span>{name}</span>\n                </h3>\n\n                <button className=\"btn\" onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n\n            <div className=\"journal__new-entry\">\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\n\nexport const NotesAppBar = () => {\n    return (\n        <div className=\"notes__appbar\">\n            <span>28 de agosto 2020</span>\n\n            <div>\n                <button className=\"btn\">\n                    Picture\n                </button>\n\n                <button className=\"btn\">\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { NotesAppBar } from './NotesAppBar'\n\nexport const NoteScreen = () => {\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                ></textarea>\n\n                <div className=\"notes__image\">\n                    <img \n                        src=\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__340.jpg\"\n                        alt=\"imagen\"\n                    />\n                </div>\n\n\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\n// import { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n    return (\n        <div className=\"journal__main-content\">\n            \n            <Sidebar />\n\n\n            <main>\n\n                {/* <NothingSelected /> */}\n                <NoteScreen />\n\n            </main>\n\n\n        </div>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from 'react-router-dom';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport {getAuth, onAuthStateChanged} from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../actions/auth';\n\n\nexport const AppRouter = () => {\n\n    const [checking, setChecking] = useState(true);\n    const [isLoggedIn, setIsLoggedIn] =useState(false);\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n//onAuthStateChanged es una funcion de firebase que comprueba si el usuarioe esta logueado o no.\n//asi al recargar pagina, comprueba si esta logueado, y si esta logueado vuelve a enviar los datos al reducer login para que se muestren en la pagina\n        const auth=getAuth();\n        onAuthStateChanged(auth, (user) =>{\n            console.log(user);\n            //Si el user trae info(es decir, si esta autenticado)\n            if(user?.uid){\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true);\n            }else{\n                setIsLoggedIn(false);\n            }\n\n            setChecking(false);\n        });  \n    }, [dispatch, setChecking, setIsLoggedIn])\n\n    if(checking) {\n        return( <h1>Espere...</h1>)\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <Route \n                        path=\"/auth\"\n                        component={ AuthRouter }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/\"\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\"\r\n\r\nconst initialState={\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer=(state=initialState, action)=>{\r\n    switch(action.type){\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n//Esto habilita devtools y middleware\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers=combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer\r\n})\r\n\r\n//createStore solo puede recibir un reducer. Por lo que se combinan todos los reducers en \r\n//una constante.\r\nexport const store = createStore(\r\n    reducers,\r\n\r\n    //Esto es para trabajar con funciones asincronas\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import {types} from '../types/types';\r\n\r\n\r\n//Es importante que el state se inicialice siempre, aunque este vacio, que no sea null ni undefined\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\n\n\nReactDOM.render(\n  <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}